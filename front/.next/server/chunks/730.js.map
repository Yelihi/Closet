{"version":3,"file":"730.js","mappings":"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","sources":["webpack://closet/./components/add/SkeletonImage.tsx","webpack://closet/./components/recycle/VisionAICard.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { media } from '../../styles/media';\n\ninterface SkeletonProps {\n  children: React.ReactElement;\n  isLoading: boolean;\n}\n\nconst SkeletonImage = ({ children, isLoading }: SkeletonProps) => {\n  if (isLoading) {\n    return (\n      <>\n        <PreviewContainer>\n          <PreviewImage></PreviewImage>\n          <PreviewTextContainer>\n            <PreviewText>\n              <TextBox>\n                <span></span>\n                <Text></Text>\n              </TextBox>\n              <TextBox>\n                <span></span>\n                <Text></Text>\n              </TextBox>\n              <TextBox>\n                <span></span>\n                <Text></Text>\n              </TextBox>\n            </PreviewText>\n            <ButtonBox>\n              <div></div>\n            </ButtonBox>\n          </PreviewTextContainer>\n        </PreviewContainer>\n      </>\n    );\n  } else {\n    return <>{children}</>;\n  }\n};\n\nexport default SkeletonImage;\n\nconst PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.hoverGrey};\n  border-radius: 5px;\n  gap: 30px;\n  transition: box-shadow 0.25s ease-out;\n  animation: boxFade 2s 1s infinite linear alternate;\n\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  }\n\n  ${media.desktop} {\n    width: 49.5%;\n  }\n\n  @keyframes boxFade {\n    0% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.5;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst PreviewImage = styled.div`\n  width: 55%;\n  height: 200px;\n  background-color: ${({ theme }) => theme.colors.hoverGrey};\n  border-radius: 5px;\n`;\n\nconst PreviewTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 30%;\n  height: 100%;\n  margin-right: 3%;\n`;\n\nconst PreviewText = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  width: 100%;\n`;\n\nconst TextBox = styled.div`\n  display: inline-block;\n  margin-bottom: 5px;\n\n  > span {\n    display: inline-block;\n    width: 50%;\n    height: 12px;\n    background-color: ${({ theme }) => theme.colors.hoverGrey};\n    margin-bottom: 5px;\n  }\n`;\n\nconst Text = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 6px;\n  width: 100%;\n  height: 20px;\n  background-color: ${({ theme }) => theme.colors.hoverGrey};\n`;\n\nconst ButtonBox = styled.div`\n  margin-top: 20px;\n  width: 100%;\n\n  > div {\n    width: 100%;\n    height: 25px;\n    background-color: ${({ theme }) => theme.colors.hoverGrey};\n    border-radius: 15px;\n  }\n`;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport * as t from '../../reducers/type';\nimport Image from 'next/image';\n\nimport SkeletonImage from '../add/SkeletonImage';\nimport AButton from './element/button/AButton';\n\nimport { visionAICardData } from '../add/VisionAIData';\nimport { media } from '../../styles/media';\nimport { backUrl, base64URL } from '../../config/config';\nimport { CheckCircleTwoTone } from '@ant-design/icons';\n\ninterface VisionAiCardProps {\n  imageUploadLoding: boolean;\n  src: string;\n  index: number;\n  isClothes: boolean;\n  isCategori: boolean;\n  confidence: boolean;\n}\n\nconst VisionAICard = ({ imageUploadLoding, src, index, isClothes, isCategori, confidence }: VisionAiCardProps) => {\n  const dispatch = useDispatch();\n\n  const onRemoveImage = useCallback(\n    (index: number) => () => {\n      dispatch({\n        type: t.REMOVE_IMAGE,\n        data: index,\n      });\n    },\n    []\n  );\n\n  return (\n    <SkeletonImage isLoading={imageUploadLoding}>\n      <PreviewContainer key={src} border={isClothes}>\n        <PreviewImage src={`${backUrl}/${src}`} alt='의류이미지' width={600} height={600} placeholder='blur' blurDataURL={`data:image/gif;base64,${base64URL}`} />\n        <PreviewTextContainer>\n          <PreviewText>\n            {[isClothes, isCategori, confidence].map((state, idx) => {\n              return (\n                <TextBox>\n                  <span>{visionAICardData[idx].intro}</span>\n                  <Text>\n                    <CheckCircleTwoTone twoToneColor={state ? visionAICardData[idx].good : visionAICardData[idx].bad} />\n                    {state ? visionAICardData[idx].goodExplain : visionAICardData[idx].badExplain}\n                  </Text>\n                </TextBox>\n              );\n            })}\n          </PreviewText>\n          <ButtonBox>\n            <AButton color='' disabled={false} dest='제거' onClick={onRemoveImage(index)} />\n          </ButtonBox>\n        </PreviewTextContainer>\n      </PreviewContainer>\n    </SkeletonImage>\n  );\n};\n\nexport default VisionAICard;\n\nconst PreviewContainer = styled.div<{ border: boolean }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  padding: 10px;\n  border: 1px solid ${({ theme, border }) => (border ? theme.colors.success : theme.colors.red)};\n  border-radius: 5px;\n  gap: 30px;\n  transition: box-shadow 0.25s ease-out;\n\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  }\n\n  ${media.desktop} {\n    width: 49.5%;\n  }\n\n  ${media.middlePhone} {\n    flex-direction: row;\n  }\n`;\n\nconst PreviewImage = styled(Image)`\n  width: 55%;\n  height: auto;\n  object-fit: cover;\n`;\n\nconst PreviewTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: c;\n  height: 100%;\n  margin-right: 3%;\n`;\n\nconst PreviewText = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n`;\n\nconst TextBox = styled.div`\n  display: inline-block;\n  margin-bottom: 5px;\n\n  > span {\n    display: inline-block;\n    font-size: 11px;\n    font-weight: ${({ theme }) => theme.fontWeight.Light};\n    font-family: ${({ theme }) => theme.font.Efont};\n    color: ${({ theme }) => theme.colors.deepGrey};\n    margin-bottom: 5px;\n  }\n`;\n\nconst Text = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 6px;\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.fontWeight.Medium};\n  font-family: ${({ theme }) => theme.font.Efont};\n`;\n\nconst ButtonBox = styled.div`\n  margin-top: 20px;\n`;\n"],"names":["React","styled","media","SkeletonImage","children","isLoading","PreviewContainer","div","theme","colors","hoverGrey","desktop","PreviewImage","PreviewTextContainer","PreviewText","TextBox","Text","ButtonBox","useCallback","useDispatch","t","Image","AButton","visionAICardData","backUrl","base64URL","CheckCircleTwoTone","VisionAICard","imageUploadLoding","src","index","isClothes","isCategori","confidence","dispatch","onRemoveImage","type","REMOVE_IMAGE","data","map","state","idx","intro","good","bad","goodExplain","badExplain","border","success","red","middlePhone","fontWeight","Light","font","Efont","deepGrey","Medium"],"sourceRoot":""}